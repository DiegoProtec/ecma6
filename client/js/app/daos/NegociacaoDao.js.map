{"version":3,"sources":["../../app-es6/daos/NegociacaoDao.js"],"names":["Negociacao","NegociacaoDao","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","onerror","console","log","e","target","error","name","negociacoes","cursor","openCursor","atual","result","value","push","_data","_quantidade","_valor","continue","clear"],"mappings":";;;;;;;;;;;;;;;AAAQA,sB,qBAAAA,U;;;;;;;;;;;;;;;;;;;;;qCAEKC,a;AAET,uCAAYC,UAAZ,EAAwB;AAAA;;AAEpB,yBAAKC,WAAL,GAAmBD,UAAnB;AACA,yBAAKE,MAAL,GAAc,aAAd;AACH;;;;6CAEQC,U,EAAY;AAAA;;AACjB,+BAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,gCAAIC,UAAU,MAAKN,WAAL,CACTO,WADS,CACG,MAAKN,MADR,EACgB,WADhB,EAETO,WAFS,CAEG,MAAKP,MAFR,EAGTQ,GAHS,CAGLP,UAHK,CAAd;;AAKAI,oCAAQI,SAAR,GAAoB,aAAK;;AAErBN;AACH,6BAHD;;AAKAE,oCAAQK,OAAR,GAAkB,aAAK;;AAEnBC,wCAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAAT,CAAeC,IAA3B;AACAZ,uCAAO,mBAAP;AACH,6BAJD;AAKH,yBAjBM,CAAP;AAkBH;;;4CAEO;AAAA;;AAEJ,+BAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,gCAAIa,cAAc,EAAlB;AACA,gCAAIC,SAAS,OAAKnB,WAAL,CACRO,WADQ,CACI,OAAKN,MADT,EACiB,UADjB,EAERO,WAFQ,CAEI,OAAKP,MAFT,EAGRmB,UAHQ,EAAb;;AAKAD,mCAAOT,SAAP,GAAmB,aAAK;AACpB,oCAAIW,QAAQP,EAAEC,MAAF,CAASO,MAArB;AACA,oCAAID,KAAJ,EAAW;;AAEP,wCAAInB,aAAamB,MAAME,KAAvB;AACAL,gDAAYM,IAAZ,CAAiB,IAAI3B,UAAJ,CAAeK,WAAWuB,KAA1B,EAAiCvB,WAAWwB,WAA5C,EAAyDxB,WAAWyB,MAApE,CAAjB;AACAN,0CAAMO,QAAN;AACH,iCALD,MAKO;;AAEHxB,4CAAQc,WAAR;AACH;AACJ,6BAXD;;AAaAC,mCAAOR,OAAP,GAAiB,aAAK;;AAElBC,wCAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAAT,CAAeC,IAA3B;AACAZ,uCAAO,yCAAP;AACH,6BAJD;AAKH,yBA1BM,CAAP;AA2BH;;;4CAEO;AAAA;;AACJ,+BAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,gCAAIC,UAAU,OAAKN,WAAL,CACbO,WADa,CACD,OAAKN,MADJ,EACY,WADZ,EAEbO,WAFa,CAED,OAAKP,MAFJ,EAGb4B,KAHa,EAAd;;AAKAvB,oCAAQI,SAAR,GAAoB;AAAA,uCAAMN,QAAQ,mCAAR,CAAN;AAAA,6BAApB;AACAE,oCAAQK,OAAR,GAAkB;AAAA,uCAAMN,OAAO,yCAAP,CAAN;AAAA,6BAAlB;AACH,yBATM,CAAP;AAUH","file":"NegociacaoDao.js","sourcesContent":["import {Negociacao} from '../models/Negociacao';\n\nexport class NegociacaoDao {\n\n    constructor(connection) {\n\n        this._connection = connection;\n        this._store = 'negociacoes';\n    }\n\n    adiciona(negociacao) {\n        return new Promise((resolve, reject) => {\n\n            let request = this._connection\n                .transaction(this._store, 'readwrite')\n                .objectStore(this._store)\n                .add(negociacao);\n\n            request.onsuccess = e => {\n\n                resolve();\n            };\n\n            request.onerror = e => {\n\n                console.log(e.target.error.name);\n                reject('Não há registros.');\n            };\n        });\n    }\n\n    lista() {\n\n        return new Promise((resolve, reject) => {\n\n            let negociacoes = [];\n            let cursor = this._connection\n                .transaction(this._store, 'readonly')\n                .objectStore(this._store)\n                .openCursor();\n\n            cursor.onsuccess = e => {\n                let atual = e.target.result;\n                if (atual) {\n\n                    let negociacao = atual.value;\n                    negociacoes.push(new Negociacao(negociacao._data, negociacao._quantidade, negociacao._valor));\n                    atual.continue();\n                } else {\n\n                    resolve(negociacoes);\n                }\n            };\n\n            cursor.onerror = e => {\n\n                console.log(e.target.error.name);\n                reject('Não foi possível listar as negociações.');\n            };\n        });\n    }\n\n    apaga() {\n        return new Promise((resolve, reject) => {\n\n            let request = this._connection\n            .transaction(this._store, 'readwrite')\n            .objectStore(this._store)\n            .clear();\n\n            request.onsuccess = () => resolve('Negociações apagadas com sucesso.');\n            request.onerror = () => reject('Não foi possível apagar as negociações.');\n        });\n    }\n}"]}